syntax = "proto3";

package com.brewchain.sdk.model;


message TransactionInfoImpl {
	string hash = 1;
	TransactionBodyImpl body = 2;
	string signature = 3;
//	TransactionStatusImpl status = 4;
	TransactionNodeImpl node = 5;
	int64 accepttimestamp = 6;
}

message TransactionBodyImpl {
	int32 nonce = 1;
	string address = 2;
	repeated TransactionOutputImpl outputs = 3;
	int64 	fee_hi = 4;//手续费高位
	int64 	fee_low = 5;//手续费低位;
	//0普通账户,1=多重签名账户，2=20合约账户，3=721合约账户,4=CVM合约,5=JSVM合约(可并行)

	int32	inner_codetype = 6;//内置指令交易[0=普通交易,1=多重签名交易,2=RC20交易，3=RC721交易，4=CVM合约调用,5=JSVM合约调用,6=evfs交易,7=链委员会,8=链管理员组
	string   code_data = 7;//指令数据
	string   ext_data = 8;
	int64   timestamp = 9;
	string biz_code = 10; //业务代码
	string version = 11; //版本
	int32 chainId = 12;
}

message TransactionOutputImpl {
	string address = 1;
	string amount = 2;
	string token = 3;
	string tokenAmount = 4;
	string symbol = 5;
	repeated string cryptoToken = 6;
}

message TransactionNodeImpl {
	string nid = 1;
	string address = 2;
}

message TransactionStatusImpl {
	string status = 1;
	string result = 2;
//	string hash = 3;
	int64 height = 4;
	int64 timestamp = 5;
	//support for eth like chain client
	repeated string logs = 6;
	string	logsBloom = 7;
	int32 blockIndex = 8;
	string gasUsed = 9;
	string	cumulativeGasUsed = 10;
	string contractAddress = 11;
}

message TxResult {
	int32 retCode = 1;
	string retMsg = 2;
	string hash = 4;
	TransactionInfoImpl transaction = 3;
	TransactionStatusImpl status = 5;
	string blockHash = 7;
}